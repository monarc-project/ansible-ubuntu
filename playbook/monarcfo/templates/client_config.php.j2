<?php
/**
 * Local Configuration Override
 *
 * This configuration override file is for overriding environment-specific and
 * security-sensitive configuration information. Copy this file without the
 * .dist extension at the end and populate values as needed.
 *
 * @NOTE: This file is ignored from Git by default with the .gitignore included
 * in ZendSkeletonApplication. This is a good practice, as it prevents sensitive
 * credentials from accidentally being committed into version control.
 */

 $appdir = getenv('APP_DIR') ? getenv('APP_DIR') : '/var/lib/monarc/fo';
 $string = file_get_contents($appdir.'/package.json');
 if($string === FALSE) {
     $string = file_get_contents('./package.json');
 }
 $package_json = json_decode($string, true);

return array(
    'doctrine' => array(
	 'connection' => array(
            'orm_default' => array(
                'params' => array(
                    'host' => '{{ master }}',
                    'user' => '{{ item.value.name }}',
                    'password' => '{{ item.value.mysql_password }}',
                    'dbname' => 'monarc_common',
                ),
            ),
            'orm_cli' => array(
                'params' => array(
                    'host' => 'localhost',
                    'user' => '{{ item.value.name }}',
                    'password' => '{{ item.value.mysql_password }}',
                    'dbname' => '{{ item.value.name }}',
                ),
            ),
        ),
    ),


    'languages' => [
        'fr' => [
            'index' => 1,
            'label' => 'FranÃ§ais',
        ],
        'en' => [
            'index' => 2,
            'label' => 'English',
        ],
        'de' => [
            'index' => 3,
            'label' => 'Deutsch',
        ],
        'nl' => [
            'index' => 4,
            'label' => 'Nederlands',
        ],
    ],


    'defaultLanguageIndex' => 1,

    'activeLanguages' => array('fr','en','de','nl','es','ro','it','pl','pt','ja'),

    'appVersion' => $package_json['version'],

    'checkVersion' => true,
    'appCheckingURL' => 'https://version.monarc.lu/check/MONARC',

    'instanceName' => '{{item.value.name}}', // will be used for the label of the 2FA QRCode.

    'email' => [
        'name' => 'MONARC',
        'from' => '{{ emailFrom if emailFrom else "info@monarc.lu" }}',
    ],

    'terms' => '{{ terms if terms is defined else "" }}',

    'monarc' => array(
        'ttl' => 60, // timeout
        'salt' => '{{ item.value.salt }}', // private salt for the password
        'cliModel' => 'generic', // model to display for the client, else an ID of model, else 'generic' (empty for all)
    ),

    'mospApiUrl' => 'https://objects.monarc.lu/api/',

    'statsApi' => [
        'baseUrl' => '{{ monarc_statsservice_url }}', // stats service running on the back office
        'apiKey' => '{{item.value.statsToken}}' // token of the client generated by "add_inventory.py"
    ],

    'publicHost' => '{{ protocol }}://{{ publicHost }}/{{item.value.name}}{{ '-' + env_prefix if env_prefix else '' }}',
);
