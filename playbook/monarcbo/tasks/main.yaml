---

- assert:
    that:
      - monarc_sql_password is defined

- name: create monarc directory
  file:
    state: directory
    path: /var/lib/monarc/bo
    owner: ansible
    group: ansible
  become: True

- name: create monarc releases directory
  file:
    state: directory
    path: /var/lib/monarc/releases/

- name: download release
  get_url:
    url: "{{ monarcbo_release_url }}"
    dest: "/var/lib/monarc/releases/{{ monarcbo_release_url | basename }}"
    owner: ansible
    group: ansible
  environment:
    http_proxy: "{{ http_proxy | default('') }}"
    https_proxy: "{{ https_proxy | default('') }}"

- name: create release directory
  file:
    state: directory
    dest: "/var/lib/monarc/releases/{{ monarcbo_release_url | basename | replace('.tar.gz', '') }}"

- name: unarchive release
  unarchive:
    remote_src: yes
    src: "/var/lib/monarc/releases/{{ monarcbo_release_url | basename }}"
    dest: "/var/lib/monarc/releases/{{ monarcbo_release_url | basename | replace('.tar.gz', '') }}"

- name: create release symlink
  file:
    state: link
    src: "/var/lib/monarc/releases/{{ monarcbo_release_url | basename | replace('.tar.gz', '') }}"
    dest: "/var/lib/monarc/bo/MonarcAppBO"
  register: _updated_release_symlink
  tags: always

- name: configuration template
  template:
    src: local.php.j2
    dest: /var/lib/monarc/bo/MonarcAppBO/config/autoload/local.php
    mode: 0440
    owner: ansible
    group: www-data
  become: True
  register: _bo_config

- name: create data directory
  file:
    state: directory
    path: "{{ item }}"
    owner: "www-data"
  loop:
    - "/var/lib/monarc/bo-data"
    - "/var/lib/monarc/bo-data/monarc/models"
  become: True

- name: create data directory symlink
  file:
    state: link
    dest: "/var/lib/monarc/bo/MonarcAppBO/data"
    src: "/var/lib/monarc/bo-data"

- name: deleting cache
  file:
    path: "/var/lib/monarc/bo/MonarcAppBO/data/cache"
    state: absent
  when: ( monarcbo_clean_cache | bool ) or ( _updated_release_symlink is changed ) or ( _bo_config is defined and _bo_config is changed )
  become: True

- name: deleting Doctrine cache
  file:
    path: "/var/lib/monarc/bo/MonarcAppBO/data/DoctrineORMModule"
    state: absent
  when: ( monarcbo_clean_cache | bool ) or ( _updated_release_symlink is changed )
  become: True

- name: create data/cache dir
  file:
    path: "{{ item }}"
    state: directory
    owner: "www-data"
  loop:
    - "/var/lib/monarc/bo/MonarcAppBO/data/cache"
    - "/var/lib/monarc/bo/MonarcAppBO/data/LazyServices/Proxy"
    - "/var/lib/monarc/bo/MonarcAppBO/data/DoctrineORMModule/Proxy"
  become: True

- name: set MariaDB bind-address to 0.0.0.0
  ini_file:
    path: "/etc/mysql/my.cnf"
    section: "mysqld"
    option: "bind-address"
    value: "0.0.0.0"
  notify:
    - restart mysql
  become: True

- name: create monarc bo database
  mysql_db:
    name: "{{ item }}"
    config_file: /etc/mysql/debian.cnf
  register: _monarcbo_db_creation
  loop:
    - monarc_master
    - monarc_common
  become: True

- name: create monarc bo sql user
  mysql_user:
    name: monarc
    password: "{{ monarc_sql_password }}"
    priv: "monarc_common.*:ALL/monarc_master.*:ALL"
    config_file: /etc/mysql/debian.cnf
  become: True

- name: initializes the database structure
  shell: mysql --defaults-file=/etc/mysql/debian.cnf monarc_common < /var/lib/monarc/bo/MonarcAppBO/db-bootstrap/monarc_structure.sql
  become: True
  when: _monarcbo_db_creation is changed or monarcbo_force_db_init | bool

- name: populates the database
  shell: mysql --defaults-file=/etc/mysql/debian.cnf monarc_common < /var/lib/monarc/bo/MonarcAppBO/db-bootstrap/monarc_data.sql
  become: True
  when: _monarcbo_db_creation is changed or monarcbo_force_db_init | bool

- name: run database phinx migration jobs
  shell: "php ./vendor/robmorgan/phinx/bin/phinx migrate -c ./module/{{ item }}/migrations/phinx.php"
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  loop:
    - "Monarc/Core"
    - "Monarc/BackOffice"
  register: _phinx_migrate
  changed_when: "{{ 'migrating' in _phinx_migrate.stdout }}"

- name: create initial admin user
  shell: php ./vendor/robmorgan/phinx/bin/phinx seed:run -c ./module/Monarc/BackOffice/migrations/phinx.php
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: _monarcbo_db_creation is changed or monarcbo_force_db_init | bool

- name: create readonly access to monarc common
  mysql_user:
    name: "{{ item.value.name }}"
    host: "%"
    password: "{{ item.value.mysql_password }}"
    priv: "monarc_common.*:SELECT"
    config_file: /etc/mysql/debian.cnf
  with_dict: "{{ dict(groups['dev'] | map('extract',hostvars,'clients') | map('dictsort') | sum(start=[]) | list) }}"
  loop_control:
    label: "{{ item.key }}"
  when: item is defined
  become: True

- name: create spool directory
  file:
    state: directory
    name: /var/spool/monarc
    owner: "www-data"
  become: True

- name: install cat script for new clients
  copy:
    src: new_monarc_clients.sh
    dest: /usr/local/bin/new_monarc_clients.sh
    mode: "0755"
  become: True

- name: install cat script for deleted clients
  copy:
    src: del_monarc_clients.sh
    dest: /usr/local/bin/del_monarc_clients.sh
    mode: "0755"
  become: True

- name: rewrite apache module
  apache2_module:
    state: present
    name: rewrite
  become: True
  notify:
    - restart apache

# force apache restart as we may push mod_rewrite config before module is enabled
- meta: flush_handlers

- name: apache vhost configuration
  template: src=apache_vhost_conf.j2 dest=/etc/apache2/sites-available/{{ ansible_fqdn }}.conf
  notify:
    - apache2ctl configtest
    - reload apache
  become: True

- name: deactivates the default virtualhost
  command: a2dissite 000-default.conf
  changed_when: "'disabled.' in _a2dissite.stdout"
  register: _a2dissite
  notify:
    - apache2ctl configtest
    - reload apache
  become: True

- name: activates the virtualhost
  command: a2ensite {{ ansible_fqdn }}
  changed_when: "'Enabling site' in _a2ensite.stdout"
  register: _a2ensite
  notify:
    - apache2ctl configtest
    - reload apache
  become: True

- include_tasks: statsservice.yml
  tags: [ always, stats ]
  when:
    - ( monarc_enable_statsservice | bool ) or ( monarc_statsservice_admin_token is defined )
