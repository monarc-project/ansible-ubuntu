---

- name: checkout repository
  git:
    repo: https://github.com/monarc-project/MonarcAppBO
    dest: /var/lib/monarc/bo/MonarcAppBO/
    version: master
    update: no
  register: appbo_pull

- name: create module dir
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/module/Monarc
    state: directory

- name: create data dir
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/data
    state: directory
    owner: "www-data"
  become: True

- name: create data/cache dir
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/data/cache
    state: directory
    owner: "www-data"
  become: True

- name: create Proxy dir
  file:
    name: /var/lib/monarc/bo/MonarcAppBO/data/LazyServices/Proxy
    state: directory
    owner: www-data
  become: True

- name: deleting cache
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/data/cache/
    state: absent
  become: True

- name: deleting Doctrine cache
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/data/DoctrineORMModule/
    state: absent
  become: True

- name: set github auth token for composer
  command: composer config -g github-oauth.github.com {{ github_auth_token }}

- name: composer install
  shell: composer install
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before == None

- name: MonarcCore link
  file:
    src: /var/lib/monarc/bo/MonarcAppBO/vendor/monarc/core
    dest: /var/lib/monarc/bo/MonarcAppBO/module/Monarc/Core
    state: link

- name: backoffice link
  file:
    src: /var/lib/monarc/bo/MonarcAppBO/vendor/monarc/backoffice
    dest: /var/lib/monarc/bo/MonarcAppBO/module/Monarc/BackOffice
    state: link

- name: set MariaDB bind-address to 0.0.0.0
  shell: printf '\n[mysqld]\nbind-address = 0.0.0.0\n' | sudo tee -a /etc/mysql/my.cnf
  become: True
  when: appbo_pull.before == None
  notify:
    - restart mysql

- name: create monarc bo database
  mysql_db:
    name: monarc_master
    config_file: /etc/mysql/debian.cnf
  become: True

- name: create monarc common database
  mysql_db:
    name: monarc_common
    config_file: /etc/mysql/debian.cnf
  become: True

- name: create monarc bo sql user
  mysql_user:
    name: monarc
    password: "{{ monarc_sql_password }}"
    priv: "monarc_common.*:ALL/monarc_master.*:ALL"
    config_file: /etc/mysql/debian.cnf
  become: True

- name: initializes the database structure
  shell: mysql -u monarc -p"{{ monarc_sql_password }}" monarc_common < db-bootstrap/monarc_structure.sql
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before == None

- name: populates the database
  shell: mysql -u monarc -p"{{ monarc_sql_password }}" monarc_common < db-bootstrap/monarc_data.sql
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before == None

- name: configuration template
  template:
    src: local.php.j2
    dest: /var/lib/monarc/bo/MonarcAppBO/config/autoload/local.php
    mode: 0440
    owner: ansible
    group: ansible
  become: True

- name: update-all
  shell: "scripts/update-all.sh"
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before == None

- name: create initial admin user
  shell: php ./vendor/robmorgan/phinx/bin/phinx seed:run -c ./module/MonarcBO/migrations/phinx.php
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before == None

- name: create readonly access to monarc common
  mysql_user:
    name: "{{ item.value.name }}"
    host: "%"
    password: "{{ item.value.mysql_password }}"
    priv: "monarc_common.*:SELECT"
    config_file: /etc/mysql/debian.cnf
  with_dict: "{{ dict(groups['dev'] | map('extract',hostvars,'clients') | map('dictsort') | sum(start=[]) | list) }}"
  when: item is defined
  become: True

- name: create spool directory
  file: name=/var/spool/monarc owner=www-data state=directory
  become: True

- name: create temp directory for parsing new clients
  file: name=/var/tmp/monarc/created recurse=True state=directory owner=www-data
  become: True

- name: create temp directory for parsing deleted clients
  file: name=/var/tmp/monarc/deleted recurse=True state=directory owner=www-data
  become: True

- name: install cat script for new clients
  copy: src=new_monarc_clients.sh dest=/usr/local/bin/new_monarc_clients.sh mode=0755
  become: True

- name: install cat script for deleted clients
  copy: src=del_monarc_clients.sh dest=/usr/local/bin/del_monarc_clients.sh mode=0755
  become: True

- name: rewrite apache module
  apache2_module:
    state: present
    name: rewrite
  become: True
  notify:
    - restart apache

- name: apache vhost configuration
  template: src=apache_vhost_conf.j2 dest=/etc/apache2/sites-available/{{ ansible_fqdn }}.conf
  become: True
  notify:
    - reload apache

- name: deactivates the default virtualhost
  command: a2dissite 000-default.conf
  become: True
  notify:
    - reload apache

- name: activates the virtualhost
  command: a2ensite {{ ansible_fqdn }}
  become: True
  notify:
    - reload apache

# - name: create Stats Service dir
#   file:
#     name: {{ stats_service }}
#     state: directory
#     owner: www-data
#   become: True
#   when: stats_service is defined
# 
# - name: update Stats Service
#   shell: "./contrib/update.sh"
#   args:
#     chdir: {{ stats_service }}
#   when: stats_service is defined

- name: create new client for stats collection
  command: ./contrib/create_client.sh {{item.value.name}} {{item.value.statsToken}}
  with_dict: "{{ dict(groups['dev'] | map('extract',hostvars,'clients') | map('dictsort') | sum(start=[]) | list) }}"
  become: yes
  become_user: ansible
  args:
    chdir: "{{ stats_service }}"
  when:
    - item is defined
    - stats_service is defined
